// Code generated by protoc-gen-gopherd. DO NOT EDIT.
// source: proto/protobuf/gatepb/gated.proto
package gatepb

import registry "github.com/gopherd/doge/proto"
import proto "google.golang.org/protobuf/proto"

var _ = proto.Marshal

const (
	ForwardType   = 150
	UnicastType   = 151
	MulticastType = 152
	BroadcastType = 153
	KickoutType   = 154
	LoginType     = 155
	LogoutType    = 156
	RouterType    = 161
)

func init() {
	registry.Register("gatepb", ForwardType, func() registry.Message { return new(Forward) })
	registry.Register("gatepb", UnicastType, func() registry.Message { return new(Unicast) })
	registry.Register("gatepb", MulticastType, func() registry.Message { return new(Multicast) })
	registry.Register("gatepb", BroadcastType, func() registry.Message { return new(Broadcast) })
	registry.Register("gatepb", KickoutType, func() registry.Message { return new(Kickout) })
	registry.Register("gatepb", LoginType, func() registry.Message { return new(Login) })
	registry.Register("gatepb", LogoutType, func() registry.Message { return new(Logout) })
	registry.Register("gatepb", RouterType, func() registry.Message { return new(Router) })
}

func (*Forward) Typeof() registry.Type        { return ForwardType }
func (m *Forward) Sizeof() int                { return proto.Size(m) }
func (m *Forward) Nameof() string             { return string(proto.MessageName(m)) }
func (m *Forward) Unmarshal(buf []byte) error { return proto.Unmarshal(buf, m) }
func (m *Forward) MarshalAppend(buf []byte, useCachedSize bool) ([]byte, error) {
	return proto.MarshalOptions{UseCachedSize: useCachedSize}.MarshalAppend(buf, m)
}

func (*Unicast) Typeof() registry.Type        { return UnicastType }
func (m *Unicast) Sizeof() int                { return proto.Size(m) }
func (m *Unicast) Nameof() string             { return string(proto.MessageName(m)) }
func (m *Unicast) Unmarshal(buf []byte) error { return proto.Unmarshal(buf, m) }
func (m *Unicast) MarshalAppend(buf []byte, useCachedSize bool) ([]byte, error) {
	return proto.MarshalOptions{UseCachedSize: useCachedSize}.MarshalAppend(buf, m)
}

func (*Multicast) Typeof() registry.Type        { return MulticastType }
func (m *Multicast) Sizeof() int                { return proto.Size(m) }
func (m *Multicast) Nameof() string             { return string(proto.MessageName(m)) }
func (m *Multicast) Unmarshal(buf []byte) error { return proto.Unmarshal(buf, m) }
func (m *Multicast) MarshalAppend(buf []byte, useCachedSize bool) ([]byte, error) {
	return proto.MarshalOptions{UseCachedSize: useCachedSize}.MarshalAppend(buf, m)
}

func (*Broadcast) Typeof() registry.Type        { return BroadcastType }
func (m *Broadcast) Sizeof() int                { return proto.Size(m) }
func (m *Broadcast) Nameof() string             { return string(proto.MessageName(m)) }
func (m *Broadcast) Unmarshal(buf []byte) error { return proto.Unmarshal(buf, m) }
func (m *Broadcast) MarshalAppend(buf []byte, useCachedSize bool) ([]byte, error) {
	return proto.MarshalOptions{UseCachedSize: useCachedSize}.MarshalAppend(buf, m)
}

func (*Kickout) Typeof() registry.Type        { return KickoutType }
func (m *Kickout) Sizeof() int                { return proto.Size(m) }
func (m *Kickout) Nameof() string             { return string(proto.MessageName(m)) }
func (m *Kickout) Unmarshal(buf []byte) error { return proto.Unmarshal(buf, m) }
func (m *Kickout) MarshalAppend(buf []byte, useCachedSize bool) ([]byte, error) {
	return proto.MarshalOptions{UseCachedSize: useCachedSize}.MarshalAppend(buf, m)
}

func (*Login) Typeof() registry.Type        { return LoginType }
func (m *Login) Sizeof() int                { return proto.Size(m) }
func (m *Login) Nameof() string             { return string(proto.MessageName(m)) }
func (m *Login) Unmarshal(buf []byte) error { return proto.Unmarshal(buf, m) }
func (m *Login) MarshalAppend(buf []byte, useCachedSize bool) ([]byte, error) {
	return proto.MarshalOptions{UseCachedSize: useCachedSize}.MarshalAppend(buf, m)
}

func (*Logout) Typeof() registry.Type        { return LogoutType }
func (m *Logout) Sizeof() int                { return proto.Size(m) }
func (m *Logout) Nameof() string             { return string(proto.MessageName(m)) }
func (m *Logout) Unmarshal(buf []byte) error { return proto.Unmarshal(buf, m) }
func (m *Logout) MarshalAppend(buf []byte, useCachedSize bool) ([]byte, error) {
	return proto.MarshalOptions{UseCachedSize: useCachedSize}.MarshalAppend(buf, m)
}

func (*Router) Typeof() registry.Type        { return RouterType }
func (m *Router) Sizeof() int                { return proto.Size(m) }
func (m *Router) Nameof() string             { return string(proto.MessageName(m)) }
func (m *Router) Unmarshal(buf []byte) error { return proto.Unmarshal(buf, m) }
func (m *Router) MarshalAppend(buf []byte, useCachedSize bool) ([]byte, error) {
	return proto.MarshalOptions{UseCachedSize: useCachedSize}.MarshalAppend(buf, m)
}
